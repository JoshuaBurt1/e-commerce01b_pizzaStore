{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"customerSelect\"\n}, \"Customer:\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"select\", {\n  id: \"customerSelect\"\n}, [/*#__PURE__*/_createCommentVNode(\" Options for customer selection go here \")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sizeSelect\"\n}, \"Size:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"toppingSelectC\"\n}, [/*#__PURE__*/_createCommentVNode(\" Toppings checkboxes go here \")], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"dipSelect\"\n}, \"Dip:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sideSelect\"\n}, \"Side:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  id: \"message\"\n};\nconst _hoisted_8 = {\n  id: \"price\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    id: \"pizzaForm\",\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.enterOrder && $options.enterOrder(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Your form elements go here \"), _hoisted_1, _hoisted_2, _hoisted_3, _createElementVNode(\"select\", {\n    id: \"sizeSelect\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.updatePizzaSize && $options.updatePizzaSize(...args))\n  }, [_createCommentVNode(\" Options for size selection go here \")], 32 /* NEED_HYDRATION */), _hoisted_4, _hoisted_5, _createElementVNode(\"select\", {\n    id: \"dipSelect\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.updatePizzaDip && $options.updatePizzaDip(...args))\n  }, [_createCommentVNode(\" Options for dip selection go here \")], 32 /* NEED_HYDRATION */), _hoisted_6, _createElementVNode(\"select\", {\n    id: \"sideSelect\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.updatePizzaSide && $options.updatePizzaSide(...args))\n  }, [_createCommentVNode(\" Options for side selection go here \")], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"view\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.viewOrder && $options.viewOrder(...args))\n  }, \"View Order\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"clear\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.clearOrder && $options.clearOrder(...args))\n  }, \"Clear Order\")], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString($data.message), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($data.price), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","id","_createCommentVNode","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","enterOrder","_hoisted_1","_hoisted_2","_hoisted_3","onChange","updatePizzaSize","_hoisted_4","_hoisted_5","updatePizzaDip","_hoisted_6","updatePizzaSide","type","class","onClick","viewOrder","clearOrder","_hoisted_7","_toDisplayString","$data","message","_hoisted_8","price"],"sources":["C:\\Users\\Josh\\Desktop\\WebDev\\JS\\COMP2068JavaScript-ExpressGenerator\\storeexample1-vue\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <form id=\"pizzaForm\" @submit.prevent=\"enterOrder\">\n      <!-- Your form elements go here -->\n      <label for=\"customerSelect\">Customer:</label>\n      <select id=\"customerSelect\">\n        <!-- Options for customer selection go here -->\n      </select>\n      \n      <label for=\"sizeSelect\">Size:</label>\n      <select id=\"sizeSelect\" @change=\"updatePizzaSize\">\n        <!-- Options for size selection go here -->\n      </select>\n      \n      <div id=\"toppingSelectC\">\n        <!-- Toppings checkboxes go here -->\n      </div>\n\n      <label for=\"dipSelect\">Dip:</label>\n      <select id=\"dipSelect\" @change=\"updatePizzaDip\">\n        <!-- Options for dip selection go here -->\n      </select>\n\n      <label for=\"sideSelect\">Side:</label>\n      <select id=\"sideSelect\" @change=\"updatePizzaSide\">\n        <!-- Options for side selection go here -->\n      </select>\n\n      <button type=\"button\" class=\"view\" @click=\"viewOrder\">View Order</button>\n      <button type=\"button\" class=\"clear\" @click=\"clearOrder\">Clear Order</button>\n    </form>\n    \n    <p id=\"message\">{{ message }}</p>\n    <p id=\"price\">{{ price }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      price: \"\",\n      items: [0, 0, 0, 0],\n      toppingArray: [],\n      toppingListC: [\n        \"none : $0\",\n        \"olive : $1\",\n        \"pepper : $2\",\n        \"pineapple : $2\",\n        \"ham : $3\",\n        \"pepperoni : $3\",\n        \"bacon : $4\",\n        \"extra cheese : $5\",\n      ],\n      sizeList: [\n        \"none : $0\",\n        \"small : $10\",\n        \"medium : $12\",\n        \"large : $15\",\n        \"extra large : $20\",\n        \"panzerotti : $14\",\n      ],\n      dipList: [\n        \"none : $0\",\n        \"jalapeno : $0.50\",\n        \"habanero : $0.50\",\n        \"ghost pepper : $0.50\",\n        \"ranch : $0.50\",\n        \"three cheese : $0.50\",\n        \"sweet & sour : $0.50\",\n        \"plum : $0.50\",\n      ],\n      sideList: [\n        \"none : $0\",\n        \"chicken wings : $10\",\n        \"chicken bites : $12\",\n        \"garlic bread : $6\",\n        \"cheese bread : $7\",\n        \"mozarella sticks : $8\",\n        \"apple pie : $4\",\n      ],\n      selectedSize: \"\",\n      selectedDip: \"\",\n      selectedSide: \"\",\n      message: \"\",\n      customerPizza: null,\n    };\n  },\n  methods: {\n    addToppingC() {\n      this.toppingArray.length = 0;\n      for (let i = 0; i < this.toppingCBs.length; i++) {\n        if (this.toppingCBs[i].checked) {\n          this.toppingArray.push(\" \" + this.toppingCBs[i].value);\n        }\n      }\n      // String manipulations\n      const toppingString = this.toppingArray.toString().replace(/[:]+/g, \"\");\n      // Topping sum calculation\n      const numArray = toppingString.split(/[a-zA-Z$\\s.]+/).filter(Boolean);\n      const toppingSum = numArray.reduce((acc, num) => acc + parseInt(num), 0);\n      this.items[1] = toppingSum;\n    },\n    addSize() {\n      // Populate size drop-down menu\n      this.sizeList.forEach((size) => {\n        const option = document.createElement(\"option\");\n        option.textContent = size;\n        option.id = size;\n        this.sizeSelect.appendChild(option);\n      });\n    },\n    addDip() {\n      // Populate dipList\n      this.dipList.forEach((dip) => {\n        const option = document.createElement(\"option\");\n        option.textContent = dip;\n        option.id = dip;\n        this.dipSelect.appendChild(option);\n      });\n    },\n    addSide() {\n      // Populate sideList\n      this.sideList.forEach((side) => {\n        const option = document.createElement(\"option\");\n        option.textContent = side;\n        option.id = side;\n        this.sideSelect.appendChild(option);\n      });\n    },\n    updatePizzaSize() {\n      const selectedSize = this.selectedSize.split(\" : $\");\n      this.items[0] = Number(selectedSize[1]);\n    },\n    updatePizzaDip() {\n      const selectedDip = this.selectedDip.split(\" : $\");\n      this.items[2] = Number(selectedDip[1]);\n    },\n    updatePizzaSide() {\n      const selectedSide = this.selectedSide.split(\" : $\");\n      this.items[3] = Number(selectedSide[1]);\n    },\n    viewOrder() {\n      // Your viewOrder logic goes here\n    },\n    enterOrder() {\n      // Your enterOrder logic goes here\n    },\n    clearOrder() {\n      // Your clearOrder logic goes here\n    },\n  },\n  mounted() {\n    this.addSize();\n    this.addDip();\n    this.addSide();\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nbody {\n  margin-top: 1%;\n  line-height: 1.4;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: rgb(255,255,255,0);\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n/* section styles */\nsection {\n  display: grid;\n  grid-template-rows: repeat(4, auto);\n  grid-template-columns: repeat(3, 700px);\n  grid-gap: 25px 1px;\n  justify-content: space-between;\n  margin-bottom: 5rem;\n}\n/*creates evenly sized articles*/\nsection > * {\n  flex: 0 0 auto;\n}\nsection article {\n  border: 1px solid black;\n  box-shadow: 0 2px 14px grey;\n  padding: 1.5%;\n}\narticle img {\n  margin: auto;\n  display: block;\n  height: 40%;\n}\nsection p {\n  margin: 5px 0;\n}\n\nsection ul {\n  margin-top: 0;\n}\n.form-select, .form-control {\n  width:40%;\n}\n\n.container1{\n  margin-left:2%;\n}\n\np {\n  color: limegreen;\n}\nlabel{\n  color: white;\n}\nh2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 10px;\n  margin-right: 430px;\n  color: limegreen;\n}\n\nth {\n  font-weight: 8;\n}\n\n</style>\n"],"mappings":";;gEAIMA,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAgB,GAAC,WAAS;gEACrCD,mBAAA,CAES;EAFDE,EAAE,EAAC;AAAgB,I,aACzBC,mBAAA,4CAA+C,C;gEAGjDH,mBAAA,CAAqC;EAA9BC,GAAG,EAAC;AAAY,GAAC,OAAK;gEAK7BD,mBAAA,CAEM;EAFDE,EAAE,EAAC;AAAgB,I,aACtBC,mBAAA,iCAAoC,C;gEAGtCH,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAW,GAAC,MAAI;gEAK3BD,mBAAA,CAAqC;EAA9BC,GAAG,EAAC;AAAY,GAAC,OAAK;;EAS5BC,EAAE,EAAC;AAAS;;EACZA,EAAE,EAAC;AAAO;;uBAhCfE,mBAAA,CAiCM,cAhCJJ,mBAAA,CA4BO;IA5BDE,EAAE,EAAC,WAAW;IAAEG,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFhCC,cAAA,KAAAC,IAAA,KAE0CC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC9CL,mBAAA,gCAAmC,EACnCQ,UAA6C,EAC7CC,UAES,EAETC,UAAqC,EACrCb,mBAAA,CAES;IAFDE,EAAE,EAAC,YAAY;IAAEY,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAM,eAAA,IAAAN,QAAA,CAAAM,eAAA,IAAAP,IAAA,CAAe;MAC9CL,mBAAA,wCAA2C,C,4BAG7Ca,UAEM,EAENC,UAAmC,EACnCjB,mBAAA,CAES;IAFDE,EAAE,EAAC,WAAW;IAAEY,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAS,cAAA,IAAAT,QAAA,CAAAS,cAAA,IAAAV,IAAA,CAAc;MAC5CL,mBAAA,uCAA0C,C,4BAG5CgB,UAAqC,EACrCnB,mBAAA,CAES;IAFDE,EAAE,EAAC,YAAY;IAAEY,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAW,eAAA,IAAAX,QAAA,CAAAW,eAAA,IAAAZ,IAAA,CAAe;MAC9CL,mBAAA,wCAA2C,C,4BAG7CH,mBAAA,CAAyE;IAAjEqB,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,MAAM;IAAEC,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAe,SAAA,IAAAf,QAAA,CAAAe,SAAA,IAAAhB,IAAA,CAAS;KAAE,YAAU,GAChER,mBAAA,CAA4E;IAApEqB,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC,OAAO;IAAEC,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAgB,UAAA,IAAAhB,QAAA,CAAAgB,UAAA,IAAAjB,IAAA,CAAU;KAAE,aAAW,E,4BAGrER,mBAAA,CAAiC,KAAjC0B,UAAiC,EAAAC,gBAAA,CAAdC,KAAA,CAAAC,OAAO,kBAC1B7B,mBAAA,CAA6B,KAA7B8B,UAA6B,EAAAH,gBAAA,CAAZC,KAAA,CAAAG,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}