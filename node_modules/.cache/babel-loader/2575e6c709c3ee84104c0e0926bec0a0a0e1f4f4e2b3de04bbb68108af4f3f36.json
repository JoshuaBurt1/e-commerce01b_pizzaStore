{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      price: \"\",\n      items: [0, 0, 0, 0],\n      toppingArray: [],\n      toppingListC: [\"none : $0\", \"olive : $1\", \"pepper : $2\", \"pineapple : $2\", \"ham : $3\", \"pepperoni : $3\", \"bacon : $4\", \"extra cheese : $5\"],\n      sizeList: [\"none : $0\", \"small : $10\", \"medium : $12\", \"large : $15\", \"extra large : $20\", \"panzerotti : $14\"],\n      dipList: [\"none : $0\", \"jalapeno : $0.50\", \"habanero : $0.50\", \"ghost pepper : $0.50\", \"ranch : $0.50\", \"three cheese : $0.50\", \"sweet & sour : $0.50\", \"plum : $0.50\"],\n      sideList: [\"none : $0\", \"chicken wings : $10\", \"chicken bites : $12\", \"garlic bread : $6\", \"cheese bread : $7\", \"mozarella sticks : $8\", \"apple pie : $4\"],\n      selectedSize: \"\",\n      selectedDip: \"\",\n      selectedSide: \"\",\n      message: \"\",\n      customerPizza: null\n    };\n  },\n  methods: {\n    addToppingC() {\n      // Your existing addToppingC function\n    },\n    viewOrder() {\n      let customerName = this.$refs.customerSelect.value;\n      let pizzaSize = this.$refs.sizeSelect.value;\n      // Retrieve selected toppings\n      let selectedToppings = [];\n      let toppingCBs = this.$refs.toppingCBs; // Assuming you have refs for your checkboxes\n      toppingCBs.forEach(option => {\n        if (option.checked) {\n          // Remove amounts from toppings\n          let toppingLabel = option.nextElementSibling.textContent;\n          let toppingName = toppingLabel.replace(/:\\s*\\$[\\d.]+/, \"\");\n          selectedToppings.push(toppingName);\n        }\n      });\n      let pizzaToppings = selectedToppings.join(\", \");\n      let pizzaDip = this.$refs.dipSelect.value;\n      let pizzaSide = this.$refs.sideSelect.value;\n      // Remove amounts from other values\n      customerName = customerName.replace(/:\\s*\\$[\\d.]+/, \"\");\n      pizzaSize = pizzaSize.replace(/:\\s*\\$[\\d.]+/, \"\");\n      pizzaDip = pizzaDip.replace(/:\\s*\\$[\\d.]+/, \"\");\n      pizzaSide = pizzaSide.replace(/:\\s*\\$[\\d.]+/, \"\");\n      this.customerPizza = new Pizza(customerName, pizzaSize, pizzaToppings, pizzaDip, pizzaSide);\n      this.customerPizza.description();\n    },\n    enterOrder() {\n      const pizzaCostArray = [this.items[0],\n      // pizza size cost\n      this.items[1],\n      // topping cost\n      this.items[2],\n      // dip cost\n      this.items[3] // side cost\n      ];\n      // Map the pizzaCostArray elements to the correct orderItems format\n      const orderItems = [{\n        id: 1,\n        name: \"Pizza Size\",\n        priceInCents: pizzaCostArray[0] * 100,\n        quantity: 1\n      },\n      // pizza size cost\n      {\n        id: 2,\n        name: \"Topping\",\n        priceInCents: pizzaCostArray[1] * 100,\n        quantity: 1\n      },\n      // topping cost\n      {\n        id: 3,\n        name: \"Dip\",\n        priceInCents: pizzaCostArray[2] * 100,\n        quantity: 1\n      },\n      // dip cost\n      {\n        id: 4,\n        name: \"Side\",\n        priceInCents: pizzaCostArray[3] * 100,\n        quantity: 1\n      } // side cost\n      ];\n\n      // Continue with the rest of your code\n      fetch(\"http://localhost:3000/checkout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          items: orderItems\n        })\n      }).then(res => {\n        if (res.ok) return res.json();\n        return res.json().then(json => Promise.reject(json));\n      }).then(({\n        url\n      }) => {\n        window.location = url;\n      }).catch(e => {\n        console.error(e.error);\n      });\n    },\n    clearOrder() {\n      const toppingCBs = this.$refs.toppingCBs; // Assuming you have refs for your checkboxes\n      toppingCBs.forEach(checkBox => {\n        checkBox.checked = false;\n      });\n      this.message = \"\";\n      this.price = \"\";\n    }\n  }\n};","map":{"version":3,"names":["data","price","items","toppingArray","toppingListC","sizeList","dipList","sideList","selectedSize","selectedDip","selectedSide","message","customerPizza","methods","addToppingC","viewOrder","customerName","$refs","customerSelect","value","pizzaSize","sizeSelect","selectedToppings","toppingCBs","forEach","option","checked","toppingLabel","nextElementSibling","textContent","toppingName","replace","push","pizzaToppings","join","pizzaDip","dipSelect","pizzaSide","sideSelect","Pizza","description","enterOrder","pizzaCostArray","orderItems","id","name","priceInCents","quantity","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","url","window","location","catch","e","console","error","clearOrder","checkBox"],"sources":["C:\\Users\\Josh\\Desktop\\WebDev\\JS\\COMP2068JavaScript-ExpressGenerator\\storeexample1-vue\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"container1\">\n    <form id=\"pizzaForm\">\n      <header class=\"mb-4\">\n        <h2>Cult of Personality Pizza</h2>\n      </header>\n\n      <!-- Part 3: Pizza options-->\n      <div class=\"mb-3\">\n        <label for=\"customerSelect\" class=\"form-label\">Enter customer name</label>\n        <input type=\"text\" class=\"form-control\" id=\"customerSelect\" name=\"customerName\" placeholder=\"Enter your name\">\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"sizeSelect\" class=\"form-label\">Select Size</label>\n        <select class=\"form-select\" v-model=\"selectedSize\" name=\"pizzaSize\">\n          <option value=\"\" disabled selected>Please choose...</option>\n          <option v-for=\"size in sizeList\" :key=\"size\" :value=\"size\">{{ size }}</option>\n        </select>\n      </div>\n\n      <div id=\"toppingSelectC\" class=\"mb-3\">\n        <label class=\"form-label\">Select Toppings</label><br />\n        <div v-for=\"(topping, index) in toppingListC\" :key=\"index\">\n          <input type=\"checkbox\" :value=\"topping.toLowerCase()\" :id=\"index\" @click=\"addToppingC\">\n          <label :for=\"index\">{{ topping }}</label><br>\n        </div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"dipSelect\" class=\"form-label\">Select Dip</label>\n        <select class=\"form-select\" v-model=\"selectedDip\" name=\"pizzaDip\">\n          <option value=\"\" disabled selected>Please choose...</option>\n          <option v-for=\"dip in dipList\" :key=\"dip\" :value=\"dip\">{{ dip }}</option>\n        </select>\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"sideSelect\" class=\"form-label\">Select Side</label>\n        <select class=\"form-select\" v-model=\"selectedSide\" name=\"pizzaSide\">\n          <option value=\"\" disabled selected>Please choose...</option>\n          <option v-for=\"side in sideList\" :key=\"side\" :value=\"side\">{{ side }}</option>\n        </select>\n      </div>\n\n      <div class=\"mb-3\">\n        <button type=\"button\" class=\"btn btn-primary view\" @click=\"viewOrder\">View Order</button>\n        <button type=\"reset\" class=\"btn btn-secondary clear\" @click=\"clearOrder\">Clear</button>\n        <button type=\"submit\" class=\"btn btn-success pay\" @click.prevent=\"enterOrder\">Checkout</button>\n      </div>\n\n      <p id=\"message\" class=\"mb-3\">{{ message }}</p>\n      <p id=\"price\" class=\"mb-3\">{{ price }}</p>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      price: \"\",\n      items: [0, 0, 0, 0],\n      toppingArray: [],\n      toppingListC: [\n        \"none : $0\",\n        \"olive : $1\",\n        \"pepper : $2\",\n        \"pineapple : $2\",\n        \"ham : $3\",\n        \"pepperoni : $3\",\n        \"bacon : $4\",\n        \"extra cheese : $5\",\n      ],\n      sizeList: [\n        \"none : $0\",\n        \"small : $10\",\n        \"medium : $12\",\n        \"large : $15\",\n        \"extra large : $20\",\n        \"panzerotti : $14\",\n      ],\n      dipList: [\n        \"none : $0\",\n        \"jalapeno : $0.50\",\n        \"habanero : $0.50\",\n        \"ghost pepper : $0.50\",\n        \"ranch : $0.50\",\n        \"three cheese : $0.50\",\n        \"sweet & sour : $0.50\",\n        \"plum : $0.50\",\n      ],\n      sideList: [\n        \"none : $0\",\n        \"chicken wings : $10\",\n        \"chicken bites : $12\",\n        \"garlic bread : $6\",\n        \"cheese bread : $7\",\n        \"mozarella sticks : $8\",\n        \"apple pie : $4\",\n      ],\n      selectedSize: \"\",\n      selectedDip: \"\",\n      selectedSide: \"\",\n      message: \"\",\n      customerPizza: null,\n    };\n  },\n  methods: {\n    addToppingC() {\n      // Your existing addToppingC function\n    },viewOrder() {\n      let customerName = this.$refs.customerSelect.value;\n      let pizzaSize = this.$refs.sizeSelect.value;\n      // Retrieve selected toppings\n      let selectedToppings = [];\n      let toppingCBs = this.$refs.toppingCBs; // Assuming you have refs for your checkboxes\n      toppingCBs.forEach((option) => {\n        if (option.checked) {\n          // Remove amounts from toppings\n          let toppingLabel = option.nextElementSibling.textContent;\n          let toppingName = toppingLabel.replace(/:\\s*\\$[\\d.]+/, \"\");\n          selectedToppings.push(toppingName);\n        }\n      });\n      let pizzaToppings = selectedToppings.join(\", \");\n      let pizzaDip = this.$refs.dipSelect.value;\n      let pizzaSide = this.$refs.sideSelect.value;\n      // Remove amounts from other values\n      customerName = customerName.replace(/:\\s*\\$[\\d.]+/, \"\");\n      pizzaSize = pizzaSize.replace(/:\\s*\\$[\\d.]+/, \"\");\n      pizzaDip = pizzaDip.replace(/:\\s*\\$[\\d.]+/, \"\");\n      pizzaSide = pizzaSide.replace(/:\\s*\\$[\\d.]+/, \"\");\n      this.customerPizza = new Pizza(customerName, pizzaSize, pizzaToppings, pizzaDip, pizzaSide);\n      this.customerPizza.description();\n    },\n\n    enterOrder() {\n      const pizzaCostArray = [\n        this.items[0], // pizza size cost\n        this.items[1], // topping cost\n        this.items[2], // dip cost\n        this.items[3], // side cost\n      ];\n      // Map the pizzaCostArray elements to the correct orderItems format\n      const orderItems = [\n        { id: 1, name: \"Pizza Size\", priceInCents: pizzaCostArray[0] * 100, quantity: 1 }, // pizza size cost\n        { id: 2, name: \"Topping\", priceInCents: pizzaCostArray[1] * 100, quantity: 1 }, // topping cost\n        { id: 3, name: \"Dip\", priceInCents: pizzaCostArray[2] * 100, quantity: 1 }, // dip cost\n        { id: 4, name: \"Side\", priceInCents: pizzaCostArray[3] * 100, quantity: 1 }, // side cost\n      ];\n\n      // Continue with the rest of your code\n      fetch(\"http://localhost:3000/checkout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          items: orderItems,\n        }),\n      })\n        .then((res) => {\n          if (res.ok) return res.json();\n          return res.json().then((json) => Promise.reject(json));\n        })\n        .then(({ url }) => {\n          window.location = url;\n        })\n        .catch((e) => {\n          console.error(e.error);\n        });\n    },\n\n    clearOrder() {\n      const toppingCBs = this.$refs.toppingCBs; // Assuming you have refs for your checkboxes\n      toppingCBs.forEach((checkBox) => {\n        checkBox.checked = false;\n      });\n      this.message = \"\";\n      this.price = \"\";\n    },\n  },\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nbody {\n  margin-top: 1%;\n  line-height: 1.4;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: rgb(255,255,255,0);\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n/**/\n\n\n\n/* section styles */\nsection {\n  display: grid;\n  grid-template-rows: repeat(4, auto);\n  grid-template-columns: repeat(3, 700px);\n  grid-gap: 25px 1px;\n  justify-content: space-between;\n  margin-bottom: 5rem;\n}\n/*creates evenly sized articles*/\nsection > * {\n  flex: 0 0 auto;\n}\nsection article {\n  border: 1px solid black;\n  box-shadow: 0 2px 14px grey;\n  padding: 1.5%;\n}\narticle img {\n  margin: auto;\n  display: block;\n  height: 40%;\n}\nsection p {\n  margin: 5px 0;\n}\n\nsection ul {\n  margin-top: 0;\n}\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  background-image: url(https://static.wixstatic.com/media/ba2cd3_ec56b34e45e24ad1ad14a165a939edd9~mv2.jpg/v1/fill/w_1381,h_845,al_b,q_85,enc_auto/ba2cd3_ec56b34e45e24ad1ad14a165a939edd9~mv2.jpg);\n  background-size: cover;\n  color: white;\n  font-size: 16px;\n}\n.form-select, .form-control {\n  width:40%;\n}\n\n.container1{\n  margin-left:2%;\n}\n\np {\n  color: limegreen;\n}\nlabel{\n  color: white;\n}\nh2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 10px;\n  margin-right: 430px;\n  color: limegreen;\n}\n\nth {\n  font-weight: 8;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}